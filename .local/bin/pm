#!/bin/bash

PM_SLEEP_MODE="${PM_SLEEP_MODE:-suspend}"
PM_POWER_SUPPLY_AC="${PM_POWER_SUPPLY_AC:-/sys/class/power_supply/AC/online}"

XIDLEHOOK_SOCKET=${XDG_RUNTIME_DIR}/xidlehook.sock

service_start() {
    local name="$1"
    shift
    exec -a "${name}" bash "$0" "$@"
}

service_kill() {
    local name="$1"
    shift
    pkill "$@" -f "^${name}" &>/dev/null
}

service_stop() {
    service_kill "$1"
}

service_restart() {
    service_stop "$1" && sleep 0.5
    service_start "$@"
}

_dim() {
    local brightness="$1"
    shift

    if [[ $# == 0 ]]; then
        return
    fi

    args=()
    for i in "$@"; do
        args+=(--output "$i" --brightness "${brightness}")
    done
    xrandr "${args[@]}"
}

dim() {
    local brightness displays

    case "$1" in
    on)
        brightness=0.5
        ;;
    off)
        brightness=1.0
        ;;
    reset)
        brightness="$(xrandr --verbose | awk '/Brightness/ { print $2; exit }')" 2>/dev/null
        ;;
    esac

    if [[ -n ${brightness} ]]; then
        if command -v redshift &>/dev/null; then
            redshift -o -P -b "${brightness}:${brightness}" -m randr:crtc=0 &>/dev/null
            mapfile -t displays < <(xrandr -q | awk '/\<connected\>/ && !/primary/ {print $1}' 2>/dev/null)
        else
            mapfile -t displays < <(xrandr -q | awk '/\<connected\>/ {print $1}' 2>/dev/null)
        fi
        _dim "${brightness}" "${displays[@]}"
    fi
}

is_battery_powered() {
    [[ "$(cat "${PM_POWER_SUPPLY_AC}" 2>/dev/null)" == "0" ]]
}

sleep_loop() {
    local loadavg1

    while true; do
        sleep 30 &
        wait $! || continue

        loadavg1="$(head -c 4 /proc/loadavg)"
        if xset q | grep 'Monitor is Off' &>/dev/null &&
            ! pactl list | grep 'State: RUNNING' &>/dev/null &&
            ((${loadavg1%.*} < 1)); then
            if systemctl "${PM_SLEEP_MODE}" --dry-run &>/dev/null; then
                systemctl "${PM_SLEEP_MODE}"
            elif pgrep -U "${USER}" light-locker &>/dev/null; then
                light-locker-command --lock
            fi
        fi
    done
}

main() {
    local path main_argv0

    path="$(realpath "$0")"
    main_argv0="${path}: main service"

    case "$1" in
    start)
        service_stop "$main_argv0" && sleep 0.5
        rm -f "${XIDLEHOOK_SOCKET}"
        service_start "$main_argv0" __start
        ;;
    __start)
        trap "exit" INT TERM
        trap "kill 0" EXIT
        trap " " USR1

        xset s off dpms 0 0 0 &>/dev/null
        dim off

        xidlehook \
            --socket "${XIDLEHOOK_SOCKET}" \
            --timer 10 "$0 try-blank" "" \
            --timer 170 "$0 battery-dim" "$0 undim" \
            --timer 30 "$0 battery-blank" "" \
            --timer 360 "$0 dim" "$0 undim" \
            --timer 30 "$0 blank" "" &
        xss-lock -l -- \
            ~/.local/sbin/i3lock.sh -k -B 10 --indicator \
            --insidecolor ffffff88 &

        if [[ ${PM_ALLOW_SLEEP:-1} -ne 0 ]]; then
            sleep_loop
        fi

        while true; do
            wait && break
        done
        ;;
    stop)
        service_stop "$main_argv0"
        ;;
    enable)
        xidlehook-client --socket "$XIDLEHOOK_SOCKET" \
            control --action enable >/dev/null
        ;;
    disable)
        xidlehook-client --socket "$XIDLEHOOK_SOCKET" \
            control --action disable >/dev/null
        ;;
    lock)
        xset s activate &>/dev/null
        ;;
    try-blank)
        pgrep -U "${USER}" i3lock &>/dev/null && main blank
        ;;
    battery-blank)
        if is_battery_powered; then
            main blank
        else
            dim off
        fi
        ;;
    blank)
        dim off
        xset dpms force off &>/dev/null
        service_kill "$main_argv0" -USR1
        ;;
    battery-dim)
        is_battery_powered && main dim
        ;;
    dim)
        dim on
        ;;
    undim)
        dim off
        ;;
    redshift)
        dim reset
        ;;
    esac
}

main "$@"
