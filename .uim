;;
;; .uim:
;;	uim configuration
;;

(require "japanese.scm")
(require-module "mozc")
(require-module "skk")

(define ja-direct-rule
  (append '((" " " "))
	  ja-direct-rule))


;; custom-global.scm
(define default-im-name 'mozc)
(define bridge-show-input-state? #t)
(define bridge-show-with? 'time)
(define bridge-show-input-state-time-length 3)

;; custom-global-keys1.scm
(define generic-on-key? (make-key-predicate '("zenkaku-hankaku" "<Control> " "<IgnoreShift><Control>;")))
(define generic-off-key? (make-key-predicate '("zenkaku-hankaku" "<Control> " "<IgnoreCase>l")))

;; custom-toolbar.scm
(define toolbar-show-action-based-switcher-button? #f)
(define toolbar-show-pref-button? #f)

;; custom-xim.scm
(define uim-xim-use-xft-font? #t)
(define uim-xim-xft-font-name "IPAGothic")

;; custom-mozc.scm
(define mozc-widgets '(widget_mozc_input_mode))
(define mozc-use-with-vi? #t)
(define mozc-keyboard-type-for-kana-input-method 'us-keyboard)

;; custom-skk.scm
(define skk-widgets '(widget_skk_input_mode))

;; custom-skk-dict.scm
(define skk-jisyo-code 'utf8)

;; custom-skk-advanced.scm
(define skk-use-with-vi? #t)
(define skk-egg-like-newline? #t)

;; custom-skk-keys1.scm
(define skk-sticky-key? (make-key-predicate '(";")))
